{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/construct/utils.ts"],"names":[],"mappings":";;;AAEA,IAAiB,KAAK,CAmBrB;AAnBD,WAAiB,KAAK;IACpB,SAAgB,eAAe,CAAC,eAAuB,EAAE,IAAY;QACnE,MAAM,eAAe,GAAW,qJAAqJ,CAAC;QACtL,IAAI;YACF,IAAI,iBAAiB,GAAG,IAAI,CAAC;YAC7B,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,iBAAiB,GAAG,GAAG,eAAe,IAAI,IAAI,EAAE,CAAC;aAClD;YACD,IAAI,iBAAiB,CAAC,MAAM,GAAG,EAAE,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;aAElC;YACD,OAAO,iBAAiB,CAAC;SAC1B;QACD,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,OAAO,eAAe,CAAC;SACxB;IACH,CAAC;IAjBe,qBAAe,kBAiB9B,CAAA;AACH,CAAC,EAnBgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAmBrB","sourcesContent":["\r\n\r\nexport namespace Utils {\r\n  export function createStateName(stateNamePrefix: string, name: string): string {\r\n    const nameLengthError: string = 'Error: Stepfunction State Names must be less than 80 Characters long, please re-specify the name prefix to try and stay within these service limits';\r\n    try {\r\n      let stateNameToReturn = name;\r\n      if (stateNamePrefix.length > 0) {\r\n        stateNameToReturn = `${stateNamePrefix}-${name}`;\r\n      }\r\n      if (stateNameToReturn.length > 80) {\r\n        throw new Error(nameLengthError);\r\n\r\n      }\r\n      return stateNameToReturn;\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return nameLengthError;\r\n    }\r\n  }\r\n}"]}