{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/construct/utils.ts"],"names":[],"mappings":";;;AAEA,IAAiB,KAAK,CAmBrB;AAnBD,WAAiB,KAAK;IACpB,SAAgB,eAAe,CAAC,eAAuB,EAAE,IAAY;QACnE,MAAM,eAAe,GAAW,qJAAqJ,CAAC;QACtL,IAAI;YACF,IAAI,iBAAiB,GAAG,IAAI,CAAC;YAC7B,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,iBAAiB,GAAG,GAAG,eAAe,IAAI,IAAI,EAAE,CAAC;aAClD;YACD,IAAI,iBAAiB,CAAC,MAAM,GAAG,EAAE,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;aAElC;YACD,OAAO,iBAAiB,CAAC;SAC1B;QACD,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,OAAO,eAAe,CAAC;SACxB;IACH,CAAC;IAjBe,qBAAe,kBAiB9B,CAAA;AACH,CAAC,EAnBgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAmBrB","sourcesContent":["\n\nexport namespace Utils {\n  export function createStateName(stateNamePrefix: string, name: string): string {\n    const nameLengthError: string = 'Error: Stepfunction State Names must be less than 80 Characters long, please re-specify the name prefix to try and stay within these service limits';\n    try {\n      let stateNameToReturn = name;\n      if (stateNamePrefix.length > 0) {\n        stateNameToReturn = `${stateNamePrefix}-${name}`;\n      }\n      if (stateNameToReturn.length > 80) {\n        throw new Error(nameLengthError);\n\n      }\n      return stateNameToReturn;\n    }\n    catch (e) {\n      console.log(e);\n      return nameLengthError;\n    }\n  }\n}"]}